Installation d’Argo Workflows :
Exécuter les commandes ci-dessous (mettre la version la plus à jour, voir ici) :
kubectl create namespace argo
Installons Brew qui va ensuite nous installer Argo :
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" 
brew install argo

On déploie Argo Workflows:
kubectl apply -n argo -f https://github.com/argoproj/argo-workflows/releases/download/v3.4.5/install.yaml

On va aussi patcher le déploiement pour éviter l’étape d’authentification pour accéder au serveur :
kubectl patch deployment \
  argo-server \
  --namespace argo \
  --type='json' \
  -p='[{"op": "replace", "path": "/spec/template/spec/containers/0/args", "value": [  "server",  "--auth-mode=server"]}]'
Ensuite on met en place le port-forwarding pour accéder au serveur de l’extérieur du cluster à partir de https://localhost:2746 :
kubectl -n argo port-forward deployment/argo-server 2746:2746
Testons l’installation avec ce simple workflow :
argo submit -n argo --watch https://raw.githubusercontent.com/argoproj/argo-workflows/master/examples/hello-world.yaml

Création d’un simple workflow :
Lisez le contenu du fichier python-multi-step-workflow.yaml (qui définit et utilise des templates), puis soumettez-le à Argo Workflows.
https://github.com/mtaileb/DataOps/blob/main/Argo_Workflow/python-multi-step-workflow.yaml
Suivez son exécution sur l’UI.
