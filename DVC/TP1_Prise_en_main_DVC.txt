- Créez le dossier TP1
- Ouvrez une CLI dans votre dossier TP1
- Tapez git init puis dvc init
- Créez le répertoire data avec : 
mkdir data
- Récupérez le dataset avec:
dvc get https://github.com/mtaileb/DataOps DVC/titanic.csv -o data/titanic.csv
- Vérifions la présence du fichier : 
dir data
- Ajoutons le tracking de ce dataset avec DVC : 
dvc add data/titanic.csv
- Ajoutons le tracking git des deux fichiers créés suite à la commande précédente : 
git add data/titanic.csv.dvc data/.gitignore
- Faisons un commit : 
git commit -m "Add raw data"
- Voyons le contenu du fichier :
notepad data/titanic.csv.dvc
- Ensuite aller dans votre compte GCP, et créer un bucket et dossier 'data'
- Retourner dans la CLI et lancer la commande suivante, qui va ajouter un stockage par défaut (option -d) à DVC (remplacer l'ID par le vôtre):
dvc remote add -d myremote gs://<mybucket>/<path>
- Réalisons un git commit pour prendre en compte l'ajout du stockage distant dans le fichier de configuration de DVC:
git commit .dvc/config -m "Ajout stockage distant"
- Sachant que notre dataset sera sur GCP, et que notre projet (hormisd le dataset) sera sur git, comment faire le lien entre les deux? I.e. comment, à partir du git, savoir où se trouve le dataset? La réponse est dans le fichier titanic.csv.dvc (qui se trouve dans le dossier 'data'), qui conserve cette information sur où le dataset est stocké, et que nous avons donc besoin de synchroniser sur le git. Par contre, avant de synchroniser le git avec le dépot distant, vérifions qu'ilne va pas synchroniser aussi le dataset, en vérifiant que celui-ci est bien mentionné dans le .gitignore:
notepad data/.gitignore
- On devrait y voir /titanic.csv
- Maintenant que le stockage de data distant est configuré, réalisons un push (avec DVC!) du dataset pour l'y déposer: dvc push


GERER PLUSSIEURS VERSIONS DU DATASET:
- 

