# Prérequis: machine locale + serveur sont des Linux (Ubuntu pour le serveur)

## Sur le terminal local, créez une clé SSH si vous n'en avez pas déjà une
ssh-keygen -o
# Pour afficher votre clé SSH publique
cat ~/.ssh/id_rsa.pub

## Sur le terminal local
ssh <username>@<adresse_ip_publique_vm>

## Sur le terminal de la VM 
# Installer Python
sudo apt-get update
sudo apt-get install python3.10
# Créer un dossier pour les environnements
mkdir environments_folder
cd environments_folder
# Créer un environnement virtuel
sudo apt install python3-pip
pip3 install virtualenv
sudo apt install python3.8-venv
python3 -m venv my_env
source ~/environments_folder/my_env/bin/activate

## Sur le terminal de la VM (my_env)
pip3 install mlflow

## Sur le terminal de la VM (my_env)
# Créer un dossier pour le projet
mkdir project_folder
cd project_folder
# Créer un dossier pour le traqueur MLflow
mkdir mlflow_tracker
# Lancer le service MLflow
nohup mlflow server --backend-store-uri /home/<username>/environments_folder/project_folder --host 0.0.0.0 --port 5000 > mlflow.log 2>&1 &

## Sur le terminal local
# Accéder au service MLflow depuis la machine locale
ssh -N -f  -L 5000:localhost:5000 <username>@<adresse_ip_publique_vm>
### Testez la connexion au serveur MLflow en allant sur http://localhost:5000/ dans votre navigateur, ou bien dans un terminal :
curl http://localhost:5000

## Sur le terminal de la VM (my_env)
# Installer Jupyter Notebooks
pip3 install jupyter
pip3 install ipykernel
# Ajouter votre environnement virtuel
ipython kernel install --user --name=my_env
# Installer d'autres bibliothèques nécessaires
pip install sklearn 
pip install azure-common
# Lancer une session de notebook sur le port 1212
nohup jupyter notebook --no-browser --port=1212 > jupyter.log 2>&1 &

## Sur le terminal local ##
ssh -N -f -L 1212:localhost:1212 <username>@<adresse_ip_publique_vm>

# Ensuite ouvrez Jupyter en local (il devrait automatiquement se connecter au serveur), sélectionner le noyau de l'environnement déjà créé, puis exécutez votre code Python.
